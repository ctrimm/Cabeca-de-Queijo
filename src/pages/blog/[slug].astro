---
import { changeLanguage } from "i18next";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";

changeLanguage("en");

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  const paths = [];

  for (const entry of blogEntries) {
    // Filter out the current entry
    const otherEntries = blogEntries.filter((otherEntry) => otherEntry.slug !== entry.slug);

    // Randomly select an entry from the remaining entries
    const randomEntry = otherEntries[Math.floor(Math.random() * otherEntries.length)];

    paths.push({
      params: { slug: entry.slug },
      props: { entry, randomEntry },
    });
  }

  return paths;
}

// Get the entry and random entry directly from the props on render
const { entry, randomEntry } = Astro.props;
const { Content } = await entry.render();
---

<Layout
  seoTitle={entry.data.title}
  seoDescription={entry.data.snippet}
  seoOpenGraph={{
    basic: {
      title: entry.data.title,
      type: "article",
      image: entry.data.image.src,
      url: `https://cabecadequeijo.com/blog/${entry.slug}/`,
    },
    image: {
      alt: entry.data.image.alt,
    },
    article: {
      publishedTime: entry.data.publishDate.toISOString(),
      authors: [entry.data.author],
      tags: entry.data.tags,
    },
  }}
>
  <Container>
    <div class="mx-auto max-w-3xl mt-14">
      <span class="text-blue-400 uppercase tracking-wider text-sm font-medium">
        {entry.data.category}
      </span>
      <h1
        class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight">
        {entry.data.title}
      </h1>
      <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap">
        <span class="text-gray-400">
          {entry.data.author}
        </span>
        <span class="text-gray-400">•</span>
        <time
          class="text-gray-400"
          datetime={entry.data.publishDate.toISOString()}>
          {entry.data.publishDate.toDateString()}
        </time>
        <span class="text-gray-400 hidden md:block">•</span>
        <div class="w-full md:w-auto flex flex-wrap gap-3">
          {
            entry.data.tags.map((tag) => (
              <span class="text-sm text-gray-500">#{tag}</span>
            ))
          }
        </div>
      </div>
    </div>

    <div class="mx-auto prose prose-lg mt-6 max-w-3xl">
      <Content />
    </div>

    {/* Add the "You May Also Like" component */}
    <div class="my-8 mx-auto max-w-3xl bg-gray-100 p-4 rounded-md hover:bg-gray-200 transition">
      <h2 class="text-2xl font-bold mb-4">You May Also Like:</h2>
      <a href={`/blog/${randomEntry.slug}`} class="flex items-center gap-4">
        <img
          src={randomEntry.data.image.src}
          alt={randomEntry.data.image.alt}
          class="w-48 h-48 object-cover rounded-md"
        />
        <article class="p-4">
          <h3 class="text-xl font-bold">{randomEntry.data.title}</h3>
          <p class="text-gray-600">{randomEntry.data.snippet}</p>
        </article>
      </a>
    </div>

    {/* Add a link to go back to the blog */}
    <div class="text-center mt-8">
      <a
        href="/blog/"
        class="bg-gray-100 px-5 py-3 rounded-md hover:bg-gray-200 transition"
        >← Back to Blog</a
      >
    </div>
  </Container>
</Layout>

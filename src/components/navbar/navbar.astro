---
import Container from "@components/container.astro";
import { Icon } from "astro-icon";
import { getLangFromUrl, useTranslations, useTranslatedPath } from '../../i18n/utils';
import LanguagePicker from '../LanguagePicker.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const menuitems = [
  {
    title: t('nav.join'),
    path: translatePath('/join/')
  },
  {
    title: t('nav.chapters'),
    path: translatePath('/chapters/')
  },
  {
    title: t('nav.schedule'),
    path: translatePath('/#schedule')
  },
  {
    title: t('nav.posts'),
    path: translatePath('/blog/')
  }
];

const mainLink = translatePath('/');
---

<Container>
  <header class="flex flex-col lg:flex-row justify-between items-center my-5">
    <div class="flex w-full lg:w-auto items-center justify-between">
      <a href={mainLink} class="text-lg">
        <span class="font-bold text-slate-800">Cabe√ßa</span>
        <span class="text-slate-500"> de </span>
        <span class="font-bold text-slate-800">Queijo</span>
      </a>
      <button
        type="button"
        class="btn btn-ghost btn-sm lg:hidden"
        aria-label="Toggle menu"
        data-menu-toggle
      >
        <Icon class="w-5 h-5 text-gray-800 hover:text-gray-600" name="heroicons-outline:menu" />
      </button>
    </div>
    <nav id="mobile-menu" class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0 fixed lg:relative bg-white lg:bg-transparent z-[100] left-0 right-0 p-4 lg:p-0 border-t lg:border-0 shadow-lg lg:shadow-none top-[4.5rem] lg:top-0 max-h-[calc(100vh-4.5rem)] overflow-y-auto">
        <ul class="flex flex-col lg:flex-row lg:gap-3">
          {
            Array.isArray(menuitems) ? menuitems.map((item) => (
            // Use the below code to render dropdowns
            // {item.children && (
            //   <Dropdown
            //     title={item.title}
            //     children={item.children}
            //     lastItem={index === menuitems.length - 1}
            //   />
            // )}
              <>
                {item && (
                  <li>
                    <a
                      href={item.path}
                      class="flex lg:px-3 py-2 text-gray-600 hover:text-gray-900">
                      {item.title}
                    </a>
                  </li>
                )}
              </>
            )) : null
          }
        </ul>
        <div class="lg:hidden flex items-center mt-6 gap-4 flex-col">
          <a role="button" href={translatePath('/join/')} class="btn btn-primary w-full text-center">{t('nav.getInvolved')}</a>
          <div class="w-full">
            <LanguagePicker />
          </div>
        </div>
    </nav>
    <div>
      <div class="hidden lg:flex items-center gap-4">
        <a role="button" href={translatePath('/join/')} class="btn btn-large btn-primary">{t('nav.getInvolved')}</a>
        <LanguagePicker />
      </div>
    </div>
  </header>
</Container>

<script>
  function setupMobileMenu() {
    const mobileMenu = document.getElementById('mobile-menu');
    const menuButton = document.querySelector('[data-menu-toggle]');

    if (menuButton && mobileMenu) {
      // Toggle menu
      menuButton.addEventListener('click', (e) => {
        e.stopPropagation();
        mobileMenu.classList.toggle('hidden');
      });

      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (!mobileMenu.contains(e.target as Node) && !menuButton.contains(e.target as Node)) {
          mobileMenu.classList.add('hidden');
        }
      });

      // Close menu when clicking a link
      mobileMenu.querySelectorAll('a').forEach((link) => {
        link.addEventListener('click', () => {
          mobileMenu.classList.add('hidden');
        });
      });
    }
  }

  // Setup on initial load
  setupMobileMenu();

  // Setup on client-side navigation
  document.addEventListener('astro:page-load', setupMobileMenu);
</script>

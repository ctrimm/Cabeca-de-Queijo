---
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import PricingCard from "@components/pricing.astro";
import { boolean } from "astro/zod";

// TO-DO - Work in Progress to add TV networks + outcome + logic to not display games in the past
const schedule = [
  {
    dateOfMatch: "2023-09-10",
    timeOfMatch: "1:00 PM BST",
    opponent: "at Chicago Bears",
    outcome: "W",
    score: "38-20"
  },
  {
    dateOfMatch: "2023-09-17",
    timeOfMatch: "2:00 PM BST",
    opponent: "at Atlanta Falcons",
  },
  {
    dateOfMatch: "2023-09-24",
    timeOfMatch: "2:00 PM BST",
    opponent: "New Orleans Saints",
  },
  {
    dateOfMatch: "2023-09-28",
    timeOfMatch: "9:15 PM BST",
    opponent: "Detroit Lions",
  },
  {
    dateOfMatch: "2023-10-09",
    timeOfMatch: "9:15 PM BST",
    opponent: "at Oakland Raiders",
  },
  {
    dateOfMatch: "2023-10-22",
    timeOfMatch: "5:25 PM BST",
    opponent: "at Denver Broncos",
  },
  {
    dateOfMatch: "2023-10-29",
    timeOfMatch: "2:00 PM BST",
    opponent: "Minnesota Vikings",
  },
  {
    dateOfMatch: "2023-11-05",
    timeOfMatch: "3:00 PM BST",
    opponent: "Los Angeles Rams",
  },
  {
    dateOfMatch: "2023-11-12",
    timeOfMatch: "3:00 PM BST",
    opponent: "at Pittsburgh Steelers",
  },
  {
    dateOfMatch: "2023-11-19",
    timeOfMatch: "3:00 PM BST",
    opponent: "Los Angeles Chargers",
  },
  {
    dateOfMatch: "2023-11-23",
    timeOfMatch: "3:00 PM BST",
    opponent: "at Detroit Lions",
  },
  {
    dateOfMatch: "2023-12-03",
    timeOfMatch: "10:20 PM BST",
    opponent: "Kansas City Chiefs",
  },
  {
    dateOfMatch: "2023-12-11",
    timeOfMatch: "10:15 PM BST",
    opponent: "at New York Giants",
  },
  {
    dateOfMatch: "2023-12-17",
    timeOfMatch: "3:00 PM BST",
    opponent: "Tampa Bay Buccaneers",
  },
  {
    dateOfMatch: "2023-12-24",
    timeOfMatch: "3:00 PM BST",
    opponent: "at Carolina Panthers",
  },
  {
    dateOfMatch: "2024-12-31",
    timeOfMatch: "10:20 PM BST",
    opponent: "at Minnesota Vikings",
  },
  {
    dateOfMatch: "2024-01-07",
    timeOfMatch: "TBD",
    opponent: "Chicago Bears",
  },
];

function calculateTimeUntilMatch(dateOfMatch) {
  const today = new Date();
  const matchDate = new Date(dateOfMatch);
  const timeDifference = matchDate.getTime() - today.getTime();
  const daysUntilMatch = Math.ceil(timeDifference / (1000 * 60 * 60 * 24));
  return `In ${daysUntilMatch} Day${daysUntilMatch > 1 ? 's' : ''}`;
}

function convertToReadableDate(dateString) {
  const date = new Date(dateString);
  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
  return date.toLocaleDateString(undefined, options);
}

---

<div class="mt-16 md:mt-0 py-4 pb-24" id="next-games">
  <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight">
    Next Games
  </h2>
  <div class="grid grid-cols-4 gap-4 max-h-100 text-lg mt-4 text-slate-600">
    {
      schedule
      .filter((game) => new Date(game.dateOfMatch) >= new Date())
      .sort((a, b) => new Date(a.dateOfMatch).getTime() - new Date(b.dateOfMatch).getTime())
      .slice(0, 4)
      .map((game, index) => (
        <div class="card w-50 bg-neutral text-neutral-content">
          <div class="card-body">
            <h2 class="card-title text-center">{index === 0 ? calculateTimeUntilMatch(game.dateOfMatch) : convertToReadableDate(game.dateOfMatch)}</h2>
            <p class="pt-5 pb-0"><strong>Time:</strong>{` ${game.timeOfMatch}`}</p>
            <p class="pb-5"><strong>Opponent:</strong>{` ${game.opponent}`}</p>
          </div>
        </div>
      ))
    }
  </div>
</div>
